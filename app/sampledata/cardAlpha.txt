Anlizeaza aplicatia si explica ce face cand se face click  pe android:id="@+id/cardAlpha"

C√¢nd activitatea EmployeeMenuActivity este creatƒÉ, pentru elementul cu id-ul cardAlpha este setat un OnClickListener. La apƒÉsarea lui se porne»ôte o nouƒÉ activitate:
findViewById(R.id.cardAlpha).setOnClickListener(v ->
        startActivity(new Intent(this, EmployeesListActivity.class))
);

√én layout-ul activity_employee_menu.xml, cardul cu id cardAlpha este etichetat ‚Äû√én ordine alfabeticƒÉ‚Äù, fiind prima op»õiune din meniu:
<!-- Op»õiunea 1: Alfabetic -->
<androidx.cardview.widget.CardView
    android:id="@+id/cardAlpha"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_marginBottom="16dp"
    android:clickable="true"
    android:focusable="true"
    android:elevation="4dp">

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:padding="20dp"
        android:text="üî§ √én ordine alfabeticƒÉ"
        android:textSize="16sp"
        android:textStyle="bold" />
</androidx.cardview.widget.CardView>

DupƒÉ declan»ôarea clicului, se deschide EmployeesListActivity. Aceasta √ÆncarcƒÉ lista tuturor angaja»õilor (dacƒÉ nu prime»ôte un parametru de filtrare) »ôi o afi»ôeazƒÉ √Æntr-un RecyclerView cu func»õie de cƒÉutare:

String star = getIntent().getStringExtra("star");
if (star != null && !star.isEmpty()) {
    loadEmployeesByStar(star);
} else {
    loadEmployeeData();
}

Metoda loadEmployeeData() face apel la API-ul extern »ôi populeazƒÉ lista cu rezultatele ob»õinute:


RestApi api = ApiUtils.getApiService();
api.retrieveEmployees().enqueue(new Callback<ResponseModelEmployee>() {
    @Override
    public void onResponse(Call<ResponseModelEmployee> call, Response<ResponseModelEmployee> response) {
        if (response.isSuccessful() && response.body() != null) {
            allEmployees = response.body().getResult();
            adapter = new EmployeeAdapter(EmployeesListActivity.this, allEmployees);
            recyclerView.setAdapter(adapter);
        } else {
            Toast.makeText(EmployeesListActivity.this, "Eroare la rƒÉspunsul serverului", Toast.LENGTH_SHORT).show();
        }
    }

    @Override
    public void onFailure(Call<ResponseModelEmployee> call, Throwable t) {
        Toast.makeText(EmployeesListActivity.this, "E»ôec la conectare: " + t.getMessage(), Toast.LENGTH_LONG).show();
    }
});

Prin urmare, la clic pe cardAlpha utilizatorul este direc»õionat spre o listƒÉ completƒÉ a angaja»õilor, √ÆncƒÉrcatƒÉ de la server »ôi afi»ôatƒÉ cu posibilitatea de cƒÉutare dupƒÉ nume, email sau alte detalii.


√én EmployeeMenuActivity, la apƒÉsarea cardului cardAlpha este pornitƒÉ EmployeesListActivity:


findViewById(R.id.cardAlpha).setOnClickListener(v ->
        startActivity(new Intent(this, EmployeesListActivity.class))
);


√én EmployeesListActivity, metoda loadEmployeeData() folose»ôte interfa»õa RestApi pentru a √ÆncƒÉrca to»õi angaja»õii:

RestApi api = ApiUtils.getApiService();
api.retrieveEmployees().enqueue(new Callback<ResponseModelEmployee>() { ... });

Interfa»õa RestApi define»ôte apelul retrieveEmployees() astfel:

@GET("index.php")
Call<ResponseModelEmployee> retrieveEmployees();


Iar RetrofitClient configureazƒÉ adresa de bazƒÉ a API‚Äëului:

private static final String BASE_URL = "http://bancusoft.com/PHP/deploy/";


Prin urmare, c√¢nd utilizatorul apasƒÉ pe cardul cardAlpha, aplica»õia face o cerere GET cƒÉtre
http://bancusoft.com/PHP/deploy/index.php pentru a ob»õine lista tuturor angaja»õilor. Acesta este endpoint‚Äëul PHP folosit pentru acea func»õionalitate.


extras din codul PHP

// Ob»õine direc»õiile generale distincte
27  public function getStars() {
28      $sql = "SELECT DISTINCT star FROM start3v3 ORDER BY star ASC";
29      $con = $this->connect();
30      if ($con != null) {
31          $result = $con->query($sql);
32          $stars = [];
33          while ($row = $result->fetch_assoc()) {
34              $stars[] = ['star' => $row['star']];
35          }
36          echo json_encode(["code" => 1, "message" => "Success", "result" => $stars]);
37          $con->close();
38      }
39  }


